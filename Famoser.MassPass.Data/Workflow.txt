1. Step: refresh local save
request (RefreshRequest): list with all sync entities, properties: ServerId, VersionId
response (RefreshResponse): list lse with all sync entities and corresponding RemoteStatus

for all items in lse
	mark as conflict if LocalStatus == Updated 
	if LocalStatus == Unchanged
		request (EncryptedEntityRequest): ServerId
		response (EncryptedResponse): EncryptedEntity, Version
		decrypt: EncryptedEntity to ContentEntity

2. Step: save local entites to the server
for all models with LocalStatus.Changed
	encrypt: ContentEntity to EncyptedEntity
	request: send EncryptedEntity, if applicable with ServerRelationId, if applicable with ServerId
	response (UpdateResponse): receive VersionId and ServerRelationId and / or ServerId if Guid.Empty or null was send for any of those two ids (UpdateResponse)

3. Step: get new entries
for each models with ServerRelationId != Guid.Empty
	request (CollectionEntitiesRequest): ServerRelationId and list with all known ServerId und of this model
	response (CollectionResponse): list with all available ServerId (items which have a connection to any of the specified ServerRelationId) but were not included in the request

	for all new ServerId
		request (EncryptedEntityRequest): ServerId of ContentEntity which you want to receive
		response (EnryptedResponse): EncryptedEntity, VersionId
		decrypt: EncryptedEntity to ContentEntity
